---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
  name: pipelines.core.rageta.io
spec:
  group: core.rageta.io
  names:
    kind: Pipeline
    listKind: PipelineList
    plural: pipelines
    singular: pipeline
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          entrypoint:
            type: string
          inputs:
            description: InputParams is a list of InputParam
            items:
              description: |-
                InputParam defines arbitrary parameters needed beyond typed inputs (such as
                resources). Parameter values are provided by users as inputs on a TaskRun
                or PipelineRun.
              properties:
                celExpression:
                  type: string
                default:
                  description: |-
                    Default is the value a parameter takes if no input value is supplied. If
                    default is set, a Task may be executed without a supplied value for the
                    parameter.
                  x-kubernetes-preserve-unknown-fields: true
                description:
                  description: |-
                    Description is a user-facing description of the parameter that may be
                    used to populate a UI.
                  type: string
                enum:
                  description: |-
                    Enum declares a set of allowed param input values for tasks/pipelines that can be validated.
                    If Enum is not set, no input validation is performed for the param.
                  items:
                    type: string
                  type: array
                name:
                  description: Name declares the name by which a parameter is referenced.
                  type: string
                properties:
                  additionalProperties:
                    description: PropertySpec defines the struct for object keys
                    properties:
                      type:
                        description: |-
                          ParamType indicates the type of an input parameter;
                          Used to distinguish between a single string and an array of strings.
                        type: string
                    type: object
                  description: Properties is the JSON Schema properties to support
                    key-value pairs parameter.
                  type: object
                type:
                  description: |-
                    Type is the user-specified type of the parameter. The possible types
                    are currently "string", "array" and "object", and "string" is the default.
                  type: string
              required:
              - name
              type: object
            type: array
            x-kubernetes-list-type: atomic
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          longDescription:
            type: string
          metadata:
            type: object
          name:
            type: string
          outputs:
            items:
              properties:
                from:
                  type: string
                name:
                  description: Name declares the name by which a parameter is referenced.
                  type: string
                step:
                  properties:
                    name:
                      type: string
                  type: object
              required:
              - name
              - step
              type: object
            type: array
            x-kubernetes-list-type: atomic
          shortDescription:
            type: string
          steps:
            items:
              properties:
                allowFailure:
                  type: boolean
                and:
                  properties:
                    refs:
                      items:
                        properties:
                          name:
                            type: string
                        type: object
                      type: array
                  type: object
                concurrent:
                  properties:
                    failFast:
                      type: boolean
                    refs:
                      items:
                        properties:
                          name:
                            type: string
                        type: object
                      type: array
                  type: object
                description:
                  type: string
                env:
                  items:
                    properties:
                      name:
                        type: string
                      value:
                        type: string
                    type: object
                  type: array
                generates:
                  items:
                    properties:
                      path:
                        type: string
                    type: object
                  type: array
                if:
                  items:
                    properties:
                      celExpression:
                        type: string
                    type: object
                  type: array
                inherit:
                  properties:
                    entrypoint:
                      type: string
                    inputs:
                      items:
                        description: Param declares an ParamValues to use for the
                          parameter called name.
                        properties:
                          name:
                            type: string
                          value:
                            x-kubernetes-preserve-unknown-fields: true
                        required:
                        - name
                        - value
                        type: object
                      type: array
                    pipeline:
                      type: string
                    propagateTemplate:
                      type: boolean
                  type: object
                inputs:
                  items:
                    description: |-
                      InputParam defines arbitrary parameters needed beyond typed inputs (such as
                      resources). Parameter values are provided by users as inputs on a TaskRun
                      or PipelineRun.
                    properties:
                      celExpression:
                        type: string
                      default:
                        description: |-
                          Default is the value a parameter takes if no input value is supplied. If
                          default is set, a Task may be executed without a supplied value for the
                          parameter.
                        x-kubernetes-preserve-unknown-fields: true
                      description:
                        description: |-
                          Description is a user-facing description of the parameter that may be
                          used to populate a UI.
                        type: string
                      enum:
                        description: |-
                          Enum declares a set of allowed param input values for tasks/pipelines that can be validated.
                          If Enum is not set, no input validation is performed for the param.
                        items:
                          type: string
                        type: array
                      name:
                        description: Name declares the name by which a parameter is
                          referenced.
                        type: string
                      properties:
                        additionalProperties:
                          description: PropertySpec defines the struct for object
                            keys
                          properties:
                            type:
                              description: |-
                                ParamType indicates the type of an input parameter;
                                Used to distinguish between a single string and an array of strings.
                              type: string
                          type: object
                        description: Properties is the JSON Schema properties to support
                          key-value pairs parameter.
                        type: object
                      type:
                        description: |-
                          Type is the user-specified type of the parameter. The possible types
                          are currently "string", "array" and "object", and "string" is the default.
                        type: string
                    required:
                    - name
                    type: object
                  type: array
                matrix:
                  properties:
                    failFast:
                      type: boolean
                    include:
                      items:
                        properties:
                          name:
                            type: string
                          params:
                            items:
                              description: Param declares an ParamValues to use for
                                the parameter called name.
                              properties:
                                name:
                                  type: string
                                value:
                                  x-kubernetes-preserve-unknown-fields: true
                              required:
                              - name
                              - value
                              type: object
                            type: array
                        type: object
                      type: array
                    params:
                      items:
                        description: Param declares an ParamValues to use for the
                          parameter called name.
                        properties:
                          name:
                            type: string
                          value:
                            x-kubernetes-preserve-unknown-fields: true
                        required:
                        - name
                        - value
                        type: object
                      type: array
                  type: object
                name:
                  type: string
                needs:
                  items:
                    properties:
                      name:
                        type: string
                    type: object
                  type: array
                outputs:
                  items:
                    properties:
                      name:
                        description: Name declares the name by which a parameter is
                          referenced.
                        type: string
                      step:
                        properties:
                          name:
                            type: string
                        type: object
                    required:
                    - name
                    - step
                    type: object
                  type: array
                pipe:
                  properties:
                    refs:
                      items:
                        properties:
                          name:
                            type: string
                        type: object
                      type: array
                  type: object
                retry:
                  properties:
                    constant:
                      type: string
                    exponential:
                      type: string
                    maxRetries:
                      type: integer
                  type: object
                run:
                  properties:
                    args:
                      items:
                        type: string
                      type: array
                    await:
                      type: string
                    command:
                      items:
                        type: string
                      type: array
                    image:
                      type: string
                    restartPolicy:
                      type: string
                    script:
                      type: string
                    stdin:
                      type: boolean
                    tty:
                      type: boolean
                    volumeMounts:
                      items:
                        properties:
                          mountPath:
                            type: string
                          name:
                            type: string
                          sourcePath:
                            type: string
                        type: object
                      type: array
                    workDir:
                      type: string
                  type: object
                sources:
                  items:
                    properties:
                      match:
                        type: string
                    type: object
                  type: array
                streams:
                  properties:
                    stderr:
                      properties:
                        append:
                          type: boolean
                        path:
                          type: string
                      type: object
                    stdin:
                      properties:
                        append:
                          type: boolean
                        path:
                          type: string
                      type: object
                    stdout:
                      properties:
                        append:
                          type: boolean
                        path:
                          type: string
                      type: object
                  type: object
                template:
                  properties:
                    args:
                      items:
                        type: string
                      type: array
                    command:
                      items:
                        type: string
                      type: array
                    image:
                      type: string
                    restartPolicy:
                      type: string
                    script:
                      type: string
                    stdin:
                      type: boolean
                    tty:
                      type: boolean
                    volumeMounts:
                      items:
                        properties:
                          mountPath:
                            type: string
                          name:
                            type: string
                          sourcePath:
                            type: string
                        type: object
                      type: array
                    workDir:
                      type: string
                  type: object
                timeout:
                  type: string
              type: object
            type: array
        type: object
    served: true
    storage: true
